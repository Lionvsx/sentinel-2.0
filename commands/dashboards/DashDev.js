const BaseCommand = require('../../utils/structures/BaseCommand')
const Discord = require('discord.js');
const {
    createButtonActionRow,
    createEmojiButton
} = require('../../utils/functions/messageComponents')

module.exports = class DashBureauCommand extends BaseCommand {
    constructor () {
        super('dashboarddev', 'dashboard', [], {
            usage: "dashboarddev",
            description: "Cr√©e un dashboard pour les devs",
            categoryDisplayName: `<:compass:1137390624090374228> Dashboard`,
            userPermissions: ['ADMINISTRATOR'],
            clientPermissions: [],
            examples: [],
            serverOnly: true,
            admin: true,
            home: true,
            subCommands: false
        });
    }

    async run (bot, message, args) {
        const DashBoardDev = new Discord.MessageEmbed()
            .setColor('2b2d31')
            .setTitle('DASHBOARD ADMIN')
            .setThumbnail('https://cdn.discordapp.com/attachments/624619133799104522/742037500536684574/icon_dashboard.png')
            .setDescription("Panneau de controle pour les administrateurs serveur afin de g√©rer le bot et le discord \nToutes les fonctionnalit√©s sont expliqu√©es ci dessous:")
            .addFields(
                { name: '\u200B', value: '\u200B' },
                { name: 'üìü | SYNC DATABASE', value: 'Synchronise les utilisateurs pr√©sents sur le serveur avec ceux enregistr√©s dans la base de donn√©es', inline: true },
                { name: '<:power:1137470789935964241> | ` REBOOT BOT `', value: "Vous permet de red√©marrer tout le programme derri√®re le bot", inline: true },
                { name: '<:alertoctagon:1137471018584244406> | ` NUKE MEMBERS `', value: "R√©tablit les r√¥les de tout les utilisateurs aux r√¥les strictement essentiels et re-sync la base de donn√©es en cons√©quence", inline: true },
                { name: '\u200B', value: '\u200B' },
                { name: '‚Ü©Ô∏è | NOTION SYNC', value: 'Synchronise notion et le serveur discord en checkant toutes les propri√©t√©e', inline: true },
                { name: '<:messagecircle:1137423168080973874> | CHANGE BOT MESSAGE', value: 'Vous permet d\'ajouter, de supprimer et de g√©rer les diff√©rentes √©quipes du serveur', inline: true },
                { name: '<:users:1137390672194850887> | TEAM SYNC', value: 'Synchronise la configuration des teams notion sur le serveur', inline: true },
            )
            const Row1 = createButtonActionRow([
                createEmojiButton('buttonSyncDatabase', 'Synchroniser la base de donn√©es', 'SECONDARY', 'üìü'),
                createEmojiButton('buttonRebootBot', 'Red√©marrer le bot', 'SECONDARY', '<:power:1137470789935964241>'),
                createEmojiButton('buttonNukeServer', 'Reset tout les utilisateurs', 'SECONDARY', '<:alertoctagon:1137471018584244406>')
            ])
            const Row2 = createButtonActionRow([
                createEmojiButton('buttonNotionSync', 'Synchronise la base de donn√©es notion', 'SECONDARY', '‚Ü©Ô∏è'),
                createEmojiButton('buttonChangeBotStatus', 'Changer le message d\'humeur du bot', 'SECONDARY', '<:messagecircle:1137423168080973874>'),
                createEmojiButton('buttonSyncTeams', 'Synchronise les √©quipes du serveur', 'SECONDARY', '<:users:1137390672194850887>'),
            ])
            message.channel.send({
                embeds: [DashBoardDev],
                components: [Row1, Row2]
            })

        message.delete()
    }
}